ALTER PROCEDURE [pangya].[ProcGetGuilds]
    @PAGE INT = 1,
    @SEARCH NVARCHAR(255) = '%'
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @LINHAS BIGINT = 0;
	DECLARE @SORT INT = 0;
    
	SELECT @LINHAS = COUNT_BIG(a.GUILD_UID)
	FROM pangya.pangya_guild a
	INNER JOIN pangya.account b ON a.GUILD_LEADER = b.[uid]
	WHERE 
		a.GUILD_NAME LIKE N'%' + @SEARCH + N'%'
		AND (a.GUILD_STATE NOT IN(4, 5) OR a.GUILD_CLOSURE_DATE IS NULL OR getdate() < a.GUILD_CLOSURE_DATE);

	SELECT 
		CEILING(CAST(@LINHAS AS FLOAT) / 12) as LINHAS,
		A.GUILD_UID,
		ISNULL(A.GUILD_NAME, N'GUILD_NAME') as GUILD_NAME,
		COUNT(pm.GUILD_UID) AS MEMBERS,
		ISNULL(A.GUILD_MARK_IMG, N'guildmark') AS GUILD_MARK_IMG,
		A.GUILD_INFO,
		A.GUILD_PANG,
		A.GUILD_POINT,
		A.GUILD_LEADER AS GUILD_LEADER_UID,
		b.NICK AS GUILD_LEADER_NICKNAME,
		CAST(a.GUILD_REG_DATE as NVARCHAR(10)) as GUILD_REG_DATE
	FROM pangya.pangya_guild A
	INNER JOIN pangya.account B ON A.GUILD_LEADER = B.[uid]
	LEFT JOIN pangya.pangya_guild_member pm ON A.GUILD_UID = pm.GUILD_UID AND pm.MEMBER_STATE_FLAG < 9
	WHERE 
		A.GUILD_NAME LIKE N'%' + @SEARCH + N'%'
		AND (A.GUILD_STATE NOT IN(4, 5) OR A.GUILD_CLOSURE_DATE IS NULL OR getdate() < A.GUILD_CLOSURE_DATE)
	GROUP BY 
		A.GUILD_UID, A.GUILD_NAME, A.GUILD_MARK_IMG, A.GUILD_INFO, A.GUILD_PANG, A.GUILD_POINT,
		A.GUILD_LEADER, b.NICK, a.GUILD_REG_DATE
	ORDER BY		
		CASE WHEN @SORT = 0 THEN CAST(a.GUILD_REG_DATE as sql_variant) ELSE CAST(a.GUILD_REG_DATE as sql_variant) END DESC
		OFFSET (@PAGE * 12) ROWS
		FETCH NEXT 12 ROWS ONLY;
END
